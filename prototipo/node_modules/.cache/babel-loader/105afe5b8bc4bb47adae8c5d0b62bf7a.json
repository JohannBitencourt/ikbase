{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/PostsList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\nimport PostContainer from '../containers/Post';\nimport { Link } from 'react-router-dom';\nimport Custom from './alert/Custom';\nimport { styledColors } from '../helpers/styled';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nvar GoToNewPost = function GoToNewPost(props) {\n  return React.createElement(Link, Object.assign({\n    to: \"/post/novo\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nvar PostsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostsList, _Component);\n\n  function PostsList() {\n    _classCallCheck(this, PostsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostsList).apply(this, arguments));\n  }\n\n  _createClass(PostsList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.match.params.category) {\n        var _this$props = this.props,\n            fetchCategoryPosts = _this$props.fetchCategoryPosts,\n            category = _this$props.match.params.category;\n        fetchCategoryPosts(category.toLowerCase());\n      } else {\n        this.props.fetchPosts();\n      }\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          posts = _this$props2.posts,\n          deletePost = _this$props2.deletePost;\n\n      if (posts.length > 0) {\n        var orderedPosts = _.sortBy(posts, this.props.postsOrder).reverse();\n\n        return _.map(orderedPosts, function (post) {\n          return React.createElement(Grid, {\n            key: post.id,\n            item: true,\n            xs: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(PostContainer, {\n            key: post.id,\n            post: post,\n            onDeletePost: deletePost,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Custom, {\n        variant: 'warning',\n        message: 'Nenhum post foi encontrado!',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props3 = this.props,\n          classes = _this$props3.classes,\n          postsOrder = _this$props3.postsOrder,\n          postSortOrder = _this$props3.postSortOrder;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: classes.select,\n        value: postsOrder,\n        color: \"secundary \",\n        onChange: function onChange(event) {\n          postSortOrder(event.target.value);\n\n          _this.setState({\n            seleted: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"voteScore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Votos\"), React.createElement(MenuItem, {\n        value: \"timestamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Data\")), React.createElement(MuiThemeProvider, {\n        theme: styledColors,\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        component: GoToNewPost,\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Novo Post\")))), this.renderPosts()));\n    }\n  }]);\n\n  return PostsList;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      marginTop: 50,\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit,\n      textAlign: 'right',\n      height: 55,\n      color: theme.palette.text.secondary\n    },\n    select: {\n      width: 100,\n      borderRadius: 2,\n      margin: theme.spacing.unit,\n      backgroundColor: '#dcdcdc'\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 100\n    }\n  };\n};\n\nPostsList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PostsList);","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/PostsList.js"],"names":["React","Component","PropTypes","Grid","MenuItem","Select","Paper","Button","_","PostContainer","Link","Custom","styledColors","withStyles","MuiThemeProvider","GoToNewPost","props","PostsList","match","params","category","fetchCategoryPosts","toLowerCase","fetchPosts","classes","posts","deletePost","length","orderedPosts","sortBy","postsOrder","reverse","map","post","id","root","postSortOrder","paper","select","event","target","value","setState","seleted","button","renderPosts","styles","theme","marginTop","flexGrow","padding","spacing","unit","textAlign","height","color","palette","text","secondary","width","borderRadius","margin","backgroundColor","marginLeft","marginRight","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SACCC,UADD,EAECC,gBAFD,QAGO,0BAHP;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,KAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAzB;;IAEMC,S;;;;;;;;;;;;;yCACiB;AACnB,UAAI,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,QAA5B,EAAsC;AAAA,0BAGE,KAAKJ,KAHP;AAAA,YAElCK,kBAFkC,eAElCA,kBAFkC;AAAA,YAGfD,QAHe,eAGlCF,KAHkC,CAGzBC,MAHyB,CAGfC,QAHe;AAIlCC,QAAAA,kBAAkB,CAACD,QAAQ,CAACE,WAAT,EAAD,CAAlB;AACD,OALH,MAKS;AACL,aAAKN,KAAL,CAAWO,UAAX;AACD;AACF;;;kCAEa;AAAA,yBAC2B,KAAKP,KADhC;AAAA,UACJQ,OADI,gBACJA,OADI;AAAA,UACKC,KADL,gBACKA,KADL;AAAA,UACYC,UADZ,gBACYA,UADZ;;AAGZ,UAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,YAAMC,YAAY,GAAGpB,CAAC,CAACqB,MAAF,CAASJ,KAAT,EAAgB,KAAKT,KAAL,CAAWc,UAA3B,EAAuCC,OAAvC,EAArB;;AACA,eACEvB,CAAC,CAACwB,GAAF,CAAMJ,YAAN,EAAoB,UAAAK,IAAI;AAAA,iBAAI,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,YAAA,IAAI,MAAxB;AAAyB,YAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAC1B,oBAAC,aAAD;AACA,YAAA,GAAG,EAAED,IAAI,CAACC,EADV;AAEA,YAAA,IAAI,EAAED,IAFN;AAGA,YAAA,YAAY,EAAEP,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD0B,CAAJ;AAAA,SAAxB,CADF;AAUD;;AACD,aACE;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACW,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,SADX;AAEE,QAAA,OAAO,EAAE,6BAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;6BAEO;AAAA;;AAAA,yBACyC,KAAKnB,KAD9C;AAAA,UACEQ,OADF,gBACEA,OADF;AAAA,UACWM,UADX,gBACWA,UADX;AAAA,UACuBM,aADvB,gBACuBA,aADvB;AAGN,aACE;AAAK,QAAA,SAAS,EAAEZ,OAAO,CAACW,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEX,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACI,QAAA,SAAS,EAAEb,OAAO,CAACc,MADvB;AAEI,QAAA,KAAK,EAAER,UAFX;AAGI,QAAA,KAAK,EAAC,YAHV;AAII,QAAA,QAAQ,EAAE,kBAAAS,KAAK,EAAI;AACjBH,UAAAA,aAAa,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;;AACA,UAAA,KAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,OAAO,EAAEJ,KAAK,CAACC,MAAN,CAAaC;AAAxB,WAAd;AACD,SAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAUE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF,EAaE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE7B,YADT;AAEE,QAAA,SAAS,EAAEY,OAAO,CAACoB,MAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,MAAD;AACE,QAAA,SAAS,EAAE7B,WADb;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CAbF,CADF,CADF,EA6BK,KAAK8B,WAAL,EA7BL,CADA,CADF;AAmCD;;;;EA5EmB5C,S;;AA+ExB,IAAM6C,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBZ,IAAAA,IAAI,EAAE;AACJa,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADe;AAKrBZ,IAAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAcC,IADlB;AAELC,MAAAA,SAAS,EAAE,OAFN;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILC,MAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmBC;AAJrB,KALc;AAWrBpB,IAAAA,MAAM,EAAE;AACNqB,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,MAAM,EAAEd,KAAK,CAACI,OAAN,CAAcC,IAHhB;AAINU,MAAAA,eAAe,EAAE;AAJX,KAXa;AAiBrBlB,IAAAA,MAAM,EAAE;AACNmB,MAAAA,UAAU,EAAE,MADN;AAENC,MAAAA,WAAW,EAAE;AAFP;AAjBa,GAAL;AAAA,CAApB;;AAuBA/C,SAAS,CAACgD,SAAV,GAAsB;AACpBzC,EAAAA,OAAO,EAAEtB,SAAS,CAACgE,MAAV,CAAiBC;AADN,CAAtB;AAIA,eAAetD,UAAU,CAACiC,MAAD,CAAV,CAAmB7B,SAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport _ from 'lodash'\nimport PostContainer from '../containers/Post'\nimport { Link } from 'react-router-dom'\nimport Custom from './alert/Custom'\nimport { styledColors } from '../helpers/styled'\nimport { \n withStyles, \n MuiThemeProvider, \n} from '@material-ui/core/styles'\n\nconst GoToNewPost = props => <Link to=\"/post/novo\" {...props} />\n\nclass PostsList extends Component {\n  componentWillMount() {\n    if (this.props.match.params.category) {\n      const {\n        fetchCategoryPosts,\n        match: { params: { category } } } = this.props;\n        fetchCategoryPosts(category.toLowerCase());\n      } else {\n        this.props.fetchPosts();\n      }\n    }\n\n    renderPosts() {\n      const { classes, posts, deletePost } = this.props;\n\n      if (posts.length > 0) {\n        const orderedPosts = _.sortBy(posts, this.props.postsOrder).reverse();\n        return (\n          _.map(orderedPosts, post => <Grid key={post.id} item xs={6}>\n            <PostContainer\n            key={post.id}\n            post={post}\n            onDeletePost={deletePost}\n          />\n          </Grid>\n          )\n        );\n      }\n      return (\n        <div className={classes.root}>\n          <Custom\n            variant={'warning'}\n            message={'Nenhum post foi encontrado!'}\n          />\n        </div>\n      )\n    }\n\n    render(){\n      const { classes, postsOrder, postSortOrder } = this.props;\n\n      return(\n        <div className={classes.root}>\n        <Grid container spacing={24}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <Select\n                  className={classes.select}\n                  value={postsOrder}\n                  color=\"secundary \"\n                  onChange={event => {\n                    postSortOrder(event.target.value)\n                    this.setState({ seleted: event.target.value })\n                  }}\n                >\n                <MenuItem value=\"voteScore\">Votos</MenuItem>\n                <MenuItem value=\"timestamp\">Data</MenuItem>\n              </Select>\n              <MuiThemeProvider \n                theme={styledColors} \n                className={classes.button}>\n                  <Button\n                    component={GoToNewPost}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                  >\n                  Novo Post\n                  </Button>\n                </MuiThemeProvider>\n            </Paper>\n          </Grid>\n            {this.renderPosts()}\n        </Grid>        \n        </div>\n      );\n    }\n  }\n\nconst styles = theme => ({\n    root: {\n      marginTop: 50,\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing.unit,\n      textAlign: 'right',\n      height: 55,\n      color: theme.palette.text.secondary,\n    },\n    select: {\n      width: 100,\n      borderRadius: 2,\n      margin: theme.spacing.unit,\n      backgroundColor: '#dcdcdc',\n    },\n    button: {\n      marginLeft: 'auto',\n      marginRight: 100\n    }\n});\n\nPostsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PostsList);\n"]},"metadata":{},"sourceType":"module"}