{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/CommentsList.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport CommentContainer from '../containers/Comment';\nimport NewComment from './NewComment';\n\nvar CommentsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentsList, _Component);\n\n  function CommentsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onCreateComment = function (comment, author) {\n      var postId = _this.props.postId;\n\n      _this.props.createComment(comment, author, postId, function () {\n        _this.props.updatePostCommentsCount();\n      });\n    };\n\n    _this.onDeleted = function (commentId) {\n      var _this$props = _this.props,\n          postId = _this$props.postId,\n          deleteComment = _this$props.deleteComment,\n          fetchComments = _this$props.fetchComments;\n      deleteComment(commentId, function () {\n        fetchComments(postId);\n\n        _this.props.updatePostCommentsCount();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentsList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      /* Recebe pelo id */\n      var _this$props2 = this.props,\n          fetchComments = _this$props2.fetchComments,\n          postId = _this$props2.postId;\n      fetchComments(postId);\n    }\n  }, {\n    key: \"renderComments\",\n    value: function renderComments() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          classes = _this$props3.classes,\n          comments = _this$props3.comments,\n          postId = _this$props3.postId;\n      return _.map(comments, function (comment, id) {\n        if (typeof comment.body !== 'undefined') {\n          return React.createElement(Card, {\n            key: id,\n            className: classes.card,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(List, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(CommentContainer, {\n            postId: postId,\n            comment: comment,\n            onDeleted: _this2.onDeleted,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          })));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NewComment, {\n        onCreateComment: this.onCreateComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), this.renderComments());\n    }\n  }]);\n\n  return CommentsList;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      marginTop: 10,\n      maxWidth: '100%',\n      backgroundColor: '#eeeeee'\n    }\n  };\n};\n\nCommentsList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CommentsList);","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/CommentsList.js"],"names":["React","Component","_","PropTypes","withStyles","Grid","Card","List","CommentContainer","NewComment","CommentsList","onCreateComment","comment","author","postId","props","createComment","updatePostCommentsCount","onDeleted","commentId","deleteComment","fetchComments","classes","comments","map","id","body","card","renderComments","styles","theme","marginTop","maxWidth","backgroundColor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport List from '@material-ui/core/List'\nimport CommentContainer from '../containers/Comment'\nimport NewComment from './NewComment'\n\nclass CommentsList extends Component {\n  componentWillMount() {\n    /* Recebe pelo id */\n    const { fetchComments, postId } = this.props;\n    fetchComments(postId);\n  }\n\n  onCreateComment = (comment, author) => {\n    const { postId } = this.props\n    this.props.createComment(comment, author, postId, () => {\n      this.props.updatePostCommentsCount()\n    });\n  }\n\n  onDeleted = (commentId) => {\n    const {\n      postId,\n      deleteComment,\n      fetchComments,\n    } = this.props;\n\n    deleteComment(commentId, () => {\n      fetchComments(postId);\n      this.props.updatePostCommentsCount();\n    });\n  }\n\n  renderComments() {\n    const { classes, comments, postId } = this.props\n    return _.map(comments, (comment, id) => {\n\n      if (typeof comment.body !== 'undefined') {\n        return (\n          <Card key={id} className={classes.card}>\n            <List>\n              <CommentContainer\n                postId={postId}\n                comment={comment}\n                onDeleted={this.onDeleted}\n              />\n            </List>\n          </Card>\n        )\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Grid item xs={12}>\n        <NewComment\n          onCreateComment={this.onCreateComment}\n          />\n\n        <br />\n        { this.renderComments()}\n      </Grid>\n    )\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    marginTop: 10,\n    maxWidth: '100%',\n    backgroundColor: '#eeeeee'\n  },\n});\n\nCommentsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CommentsList);\n"]},"metadata":{},"sourceType":"module"}