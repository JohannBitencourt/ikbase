{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/NewComment.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport NearMe from '@material-ui/icons/NearMe';\n\nvar NewComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewComment, _Component);\n\n  function NewComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      textfield: ''\n    };\n\n    _this.onKeyPress = function (event) {\n      if (event.key === 'Enter' && event.target.value !== '') {\n        var _AUTHOR = 'anônimo';\n        /* Alterar */\n\n        var comment = _this.state.textfield;\n\n        _this.setState({\n          textfield: ''\n        });\n\n        _this.props.onCreateComment(comment, _AUTHOR);\n      }\n    };\n\n    _this.onFormSubmit = function () {\n      if (_this.state.textfield !== '') {\n        var _AUTHOR = 'anônimo';\n        /* Editar Nome do usuário ==> Banco */\n\n        var comment = _this.state.textfield;\n\n        _this.setState({\n          textfield: ''\n        });\n\n        _this.props.onCreateComment(comment, _AUTHOR);\n      }\n    };\n\n    _this.handleTextFieldChange = function (event) {\n      _this.setState({\n        textfield: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewComment, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.cardComment,\n        style: {\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"comment-field\",\n        name: \"comment-field\",\n        label: \"Escreva seu coment\\xE1rio\",\n        value: this.state.textfield,\n        onChange: this.handleTextFieldChange,\n        onKeyPress: this.onKeyPress,\n        validators: ['required'],\n        errorMessages: ['Campo do comentário é obrigatório.'],\n        className: classes.inputbackground,\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.inputLabelProps\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Enviar\", React.createElement(Icon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(NearMe, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return NewComment;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    cardComment: {\n      maxWidth: '100%',\n      backgroundColor: 'white'\n    },\n    inputLabelProps: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    inputbackground: {\n      background: 'white'\n    },\n    button: {\n      margin: theme.spacing.unit\n    },\n    rightIcon: {\n      marginLeft: theme.spacing.unit\n    }\n  };\n};\n\nNewComment.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(NewComment);","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/NewComment.js"],"names":["React","Component","PropTypes","withStyles","Grid","Card","ValidatorForm","TextValidator","Button","Icon","NearMe","NewComment","state","textfield","onKeyPress","event","key","target","value","_AUTHOR","comment","setState","props","onCreateComment","onFormSubmit","handleTextFieldChange","classes","cardComment","padding","inputbackground","root","inputLabelProps","button","rightIcon","styles","theme","maxWidth","backgroundColor","fontSize","fontWeight","background","margin","spacing","unit","marginLeft","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport NearMe from '@material-ui/icons/NearMe'\n\nclass NewComment extends Component {\n\n  state = { textfield: '' }\n\n  onKeyPress = (event) => {\n    if (event.key === 'Enter' && event.target.value !== '') {\n      let _AUTHOR = 'anônimo'; /* Alterar */\n      let comment = this.state.textfield\n      this.setState({ textfield: '' });\n      this.props.onCreateComment(comment, _AUTHOR);\n    }\n  }\n\n  onFormSubmit = () => {\n    if (this.state.textfield !== '') {\n      let _AUTHOR = 'anônimo'; /* Editar Nome do usuário ==> Banco */\n      let comment = this.state.textfield\n      this.setState({ textfield: '' });\n      this.props.onCreateComment(comment, _AUTHOR);\n    }\n  }\n\n  handleTextFieldChange = (event) => {\n    this.setState({\n      textfield: event.target.value\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item xs={12}>\n        <Card className={classes.cardComment} style={{ padding: 10 }}>\n        <ValidatorForm ref=\"form\" onSubmit={this.onFormSubmit}>\n          <TextValidator\n            id=\"comment-field\"\n            name=\"comment-field\"\n            label=\"Escreva seu comentário\"\n            value={this.state.textfield}\n            onChange={this.handleTextFieldChange}\n            onKeyPress={this.onKeyPress}\n            validators={['required']}\n            errorMessages={['Campo do comentário é obrigatório.']}\n            className={classes.inputbackground}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              classes: {\n                root: classes.inputLabelProps\n              }\n            }}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}>\n            Enviar\n            <Icon className={classes.rightIcon}>\n              <NearMe />\n            </Icon>\n          </Button>\n        </ValidatorForm>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nconst styles = theme => ({\n  cardComment: {\n    maxWidth: '100%',\n    backgroundColor: 'white'\n  },\n  inputLabelProps: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  inputbackground: {\n    background: 'white'\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nNewComment.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(NewComment);\n"]},"metadata":{},"sourceType":"module"}