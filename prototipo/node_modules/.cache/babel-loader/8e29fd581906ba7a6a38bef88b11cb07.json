{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/NewPost.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator, SelectValidator } from 'react-material-ui-form-validator';\nimport { connect } from 'react-redux';\nimport { createPost, fetchCategories } from '../actions';\nimport { styledColors } from '../helpers/styled';\nimport { Link } from 'react-router-dom';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nvar GoToMain = function GoToMain(props) {\n  return React.createElement(Link, Object.assign({\n    to: \"/\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewPost, _React$Component);\n\n  function NewPost(props) {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPost).call(this, props));\n\n    _this.getOptions = function () {\n      var categories = _this.props.categories;\n\n      if (categories.length > 0) {\n        return categories.map(function (category) {\n          return React.createElement(\"option\", {\n            key: category.name,\n            value: category.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, category.name);\n        });\n      }\n    };\n\n    _this.state = {\n      formData: {\n        title: '',\n        body: '',\n        author: '',\n        category: ''\n      },\n      submitted: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"componentWilMount\",\n    value: function componentWilMount() {\n      this.props.fetchCategories();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var formData = this.state.formData;\n      formData[event.target.name] = event.target.value;\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var _this2 = this;\n\n      this.setState({\n        submitted: true\n      }, function () {\n        _this2.props.createPost(_this2.state.formData, function () {\n          _this2.props.history.push('/');\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          formData = _this$state.formData,\n          submitted = _this$state.submitted;\n      return React.createElement(MuiThemeProvider, {\n        theme: styledColors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.margin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Novo Post\"), React.createElement(TextValidator, {\n        className: classes.textValidator,\n        label: \"T\\xEDtulo\",\n        onChange: this.handleChange,\n        name: \"title\",\n        value: formData.title,\n        validators: ['required'],\n        errorMessages: ['Este campo é obrigatório'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: classes.textValidator,\n        label: \"Mensagem\",\n        onChange: this.handleChange,\n        name: \"body\",\n        value: formData.body,\n        validators: ['required'],\n        errorMessages: ['Este campo é obrigatório'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: classes.textValidator,\n        label: \"Autor\",\n        onChange: this.handleChange,\n        name: \"author\",\n        value: formData.author,\n        validators: ['required'],\n        errorMessages: ['Este campo é obrigatório'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(SelectValidator, {\n        className: classes.selectValidator,\n        id: \"category\",\n        onChange: this.handleChange,\n        name: \"category\",\n        value: formData.category,\n        SelectProps: {\n          native: true\n        },\n        validators: ['required'],\n        errorMessages: ['Este campo é obrigatório'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Selecione uma op\\xE7\\xE3o\"), this.getOptions()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        raised: \"true\",\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, submitted && 'Post enviado com sucesso!' || !submitted && 'Enviar'), React.createElement(Button, {\n        component: GoToMain,\n        className: classes.button,\n        raised: \"true\",\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Cancelar\"))))))));\n    }\n  }]);\n\n  return NewPost;\n}(React.Component);\n\nNewPost.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    categories: state.categories\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      marginTop: 75,\n      flexGrow: 1\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    paper: {\n      padding: theme.spacing.unit,\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    },\n    heading: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n    },\n    textValidator: {\n      width: 500\n    },\n    selectValidator: {\n      width: 500,\n      marginTop: 20\n    },\n    buttonContainer: {\n      margin: theme.spacing.unit,\n      marginLeft: 'auto',\n      marginRight: 0,\n      marginTop: 50\n    },\n    button: {\n      width: 150,\n      margin: 5\n    }\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, {\n  createPost: createPost,\n  fetchCategories: fetchCategories\n})(NewPost));","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/NewPost.js"],"names":["React","PropTypes","Grid","Paper","Button","ValidatorForm","TextValidator","SelectValidator","connect","createPost","fetchCategories","styledColors","Link","withStyles","MuiThemeProvider","GoToMain","props","NewPost","getOptions","categories","length","map","category","name","state","formData","title","body","author","submitted","handleChange","bind","handleSubmit","event","target","value","setState","history","push","classes","root","paper","margin","heading","textValidator","selectValidator","native","buttonContainer","button","Component","propTypes","object","isRequired","mapStateToProps","styles","theme","marginTop","flexGrow","spacing","unit","padding","textAlign","color","palette","text","secondary","fontFamily","width","marginLeft","marginRight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,eAAvC,QAA+D,kCAA/D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,YAA5C;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,UADF,EAEEC,gBAFF,QAGQ,0BAHR;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC;AAAT,KAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAAtB;;IAEMC,O;;;;;AACJ,mBAAYD,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,UAkCnBE,UAlCmB,GAkCN,YAAM;AAAA,UACTC,UADS,GACM,MAAKH,KADX,CACTG,UADS;;AAGjB,UAAIA,UAAU,CAACC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,eAAQD,UAAU,CAACE,GAAX,CAAe,UAAAC,QAAQ;AAAA,iBAC7B;AAAQ,YAAA,GAAG,EAAEA,QAAQ,CAACC,IAAtB;AAA4B,YAAA,KAAK,EAAED,QAAQ,CAACC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCD,QAAQ,CAACC,IADV,CAD6B;AAAA,SAAvB,CAAR;AAKD;AACF,KA5CkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,EADC;AAERC,QAAAA,IAAI,EAAE,EAFE;AAGRC,QAAAA,MAAM,EAAE,EAHA;AAIRN,QAAAA,QAAQ,EAAE;AAJF,OADC;AAOXO,MAAAA,SAAS,EAAE;AAPA,KAAb;AAUA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAbiB;AAclB;;;;wCAEmB;AAClB,WAAKf,KAAL,CAAWN,eAAX;AACD;;;iCAEYuB,K,EAAO;AAAA,UACVR,QADU,GACG,KAAKD,KADR,CACVC,QADU;AAElBA,MAAAA,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAaX,IAAd,CAAR,GAA8BU,KAAK,CAACC,MAAN,CAAaC,KAA3C;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD;;;mCAEc;AAAA;;AACb,WAAKW,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE;AAAb,OAAd,EAAmC,YAAM;AACvC,QAAA,MAAI,CAACb,KAAL,CAAWP,UAAX,CAAsB,MAAI,CAACe,KAAL,CAAWC,QAAjC,EAA2C,YAAM;AAC/C,UAAA,MAAI,CAACT,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAFD;AAGD,OAJD;AAKD;;;6BAcQ;AAAA,UACCC,OADD,GACa,KAAKvB,KADlB,CACCuB,OADD;AAAA,wBAEyB,KAAKf,KAF9B;AAAA,UAECC,QAFD,eAECA,QAFD;AAAA,UAEWI,SAFX,eAEWA,SAFX;AAGP,aACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAElB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE4B,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAED,OAAO,CAACE,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAC,MADN;AAEE,QAAA,QAAQ,EAAE,KAAKV,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAI,QAAA,SAAS,EAAEO,OAAO,CAACI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI,oBAAC,aAAD;AACI,QAAA,SAAS,EAAEJ,OAAO,CAACK,aADvB;AAEI,QAAA,KAAK,EAAC,WAFV;AAGI,QAAA,QAAQ,EAAE,KAAKd,YAHnB;AAII,QAAA,IAAI,EAAC,OAJT;AAKI,QAAA,KAAK,EAAEL,QAAQ,CAACC,KALpB;AAMI,QAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,QAAA,aAAa,EAAE,CAAC,0BAAD,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI,oBAAC,aAAD;AACI,QAAA,SAAS,EAAEa,OAAO,CAACK,aADvB;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,QAAQ,EAAE,KAAKd,YAHnB;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,KAAK,EAAEL,QAAQ,CAACE,IALpB;AAMI,QAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,QAAA,aAAa,EAAE,CAAC,0BAAD,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxBJ,EAyBI,oBAAC,aAAD;AACI,QAAA,SAAS,EAAEY,OAAO,CAACK,aADvB;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,QAAQ,EAAE,KAAKd,YAHnB;AAII,QAAA,IAAI,EAAC,QAJT;AAKI,QAAA,KAAK,EAAEL,QAAQ,CAACG,MALpB;AAMI,QAAA,UAAU,EAAE,CAAC,UAAD,CANhB;AAOI,QAAA,aAAa,EAAE,CAAC,0BAAD,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCJ,EAmCI,oBAAC,eAAD;AACI,QAAA,SAAS,EAAEW,OAAO,CAACM,eADvB;AAEI,QAAA,EAAE,EAAC,UAFP;AAGI,QAAA,QAAQ,EAAE,KAAKf,YAHnB;AAII,QAAA,IAAI,EAAC,UAJT;AAKI,QAAA,KAAK,EAAEL,QAAQ,CAACH,QALpB;AAMI,QAAA,WAAW,EAAE;AACbwB,UAAAA,MAAM,EAAE;AADK,SANjB;AASI,QAAA,UAAU,EAAE,CAAC,UAAD,CAThB;AAUI,QAAA,aAAa,EAAE,CAAC,0BAAD,CAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYA;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAZA,EAaI,KAAK5B,UAAL,EAbJ,CAnCJ,EAkDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlDJ,EAoDI;AAAK,QAAA,SAAS,EAAEqB,OAAO,CAACQ,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACI,QAAA,SAAS,EAAER,OAAO,CAACS,MADvB;AAEI,QAAA,MAAM,EAAC,MAFX;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAC,WAJZ;AAKI,QAAA,KAAK,EAAC,SALV;AAMI,QAAA,QAAQ,EAAEnB,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASSA,SAAS,IAAI,2BAAd,IACI,CAACA,SAAD,IAAc,QAV1B,CADF,EAeE,oBAAC,MAAD;AACI,QAAA,SAAS,EAAEd,QADf;AAEI,QAAA,SAAS,EAAEwB,OAAO,CAACS,MAFvB;AAGI,QAAA,MAAM,EAAC,MAHX;AAII,QAAA,OAAO,EAAC,WAJZ;AAKI,QAAA,KAAK,EAAC,WALV;AAMI,QAAA,QAAQ,EAAEnB,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,CApDJ,CADF,CADA,CADF,CADF,CADF,CADF;AA2FD;;;;EA7ImB7B,KAAK,CAACiD,S;;AAgJ5BhC,OAAO,CAACiC,SAAR,GAAoB;AAClBX,EAAAA,OAAO,EAAEtC,SAAS,CAACkD,MAAV,CAAiBC;AADR,CAApB;;AAIA,SAASC,eAAT,CAAyB7B,KAAzB,EAAgC;AAC9B,SAAO;AAAEL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AAApB,GAAP;AACD;;AAED,IAAMmC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBf,IAAAA,IAAI,EAAE;AACJgB,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADiB;AAKvBf,IAAAA,MAAM,EAAE;AACPA,MAAAA,MAAM,EAAEa,KAAK,CAACG,OAAN,CAAcC;AADf,KALe;AAQvBlB,IAAAA,KAAK,EAAE;AACLmB,MAAAA,OAAO,EAAEL,KAAK,CAACG,OAAN,CAAcC,IADlB;AAELE,MAAAA,SAAS,EAAE,QAFN;AAGLC,MAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB,KARgB;AAavBtB,IAAAA,OAAO,EAAE;AACPuB,MAAAA,UAAU,EAAE;AADL,KAbc;AAgBvBtB,IAAAA,aAAa,EAAE;AACbuB,MAAAA,KAAK,EAAE;AADM,KAhBQ;AAmBvBtB,IAAAA,eAAe,EAAE;AACfsB,MAAAA,KAAK,EAAE,GADQ;AAEfX,MAAAA,SAAS,EAAE;AAFI,KAnBM;AAuBvBT,IAAAA,eAAe,EAAE;AACfL,MAAAA,MAAM,EAAEa,KAAK,CAACG,OAAN,CAAcC,IADP;AAEfS,MAAAA,UAAU,EAAE,MAFG;AAGfC,MAAAA,WAAW,EAAE,CAHE;AAIfb,MAAAA,SAAS,EAAE;AAJI,KAvBM;AA6BvBR,IAAAA,MAAM,EAAE;AACNmB,MAAAA,KAAK,EAAE,GADD;AAENzB,MAAAA,MAAM,EAAE;AAFF;AA7Be,GAAL;AAAA,CAApB;;AAmCA,eAAe7B,UAAU,CAACyC,MAAD,CAAV,CAAmB9C,OAAO,CAAC6C,eAAD,EAAkB;AAAC5C,EAAAA,UAAU,EAAVA,UAAD;AAAaC,EAAAA,eAAe,EAAfA;AAAb,CAAlB,CAAP,CAAwDO,OAAxD,CAAnB,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport { ValidatorForm, TextValidator, SelectValidator  } from 'react-material-ui-form-validator'\nimport { connect } from 'react-redux'\nimport { createPost, fetchCategories } from '../actions'\nimport { styledColors } from '../helpers/styled'\nimport { Link } from 'react-router-dom'\nimport { \n  withStyles, \n  MuiThemeProvider, \n } from '@material-ui/core/styles'\n\nconst GoToMain = props => <Link to=\"/\" {...props} />\n\nclass NewPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        title: '',\n        body: '',\n        author: '',\n        category: '',\n      },\n      submitted: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWilMount() {\n    this.props.fetchCategories()\n  }\n\n  handleChange(event) {\n    const { formData } = this.state;\n    formData[event.target.name] = event.target.value;\n    this.setState({ formData });\n  }\n\n  handleSubmit() {\n    this.setState({ submitted: true }, () => {\n      this.props.createPost(this.state.formData, () => {\n        this.props.history.push('/');\n      });\n    });\n  }\n\n  getOptions = () => {\n    const { categories } = this.props\n\n    if (categories.length > 0) {\n      return  categories.map(category => (\n        <option key={category.name} value={category.name}>\n        {category.name}\n        </option>\n      ));\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { formData, submitted } = this.state;\n    return (\n      <MuiThemeProvider theme={styledColors}>\n        <div className={classes.root}>\n          <Grid container spacing={24}>\n            <Paper className={classes.paper}>\n            <div className={classes.margin}>\n              <ValidatorForm\n                ref=\"form\"\n                onSubmit={this.handleSubmit}\n                >\n                  <h2 className={classes.heading}>Novo Post</h2>\n                  <TextValidator\n                      className={classes.textValidator}\n                      label=\"Título\"\n                      onChange={this.handleChange}\n                      name=\"title\"\n                      value={formData.title}\n                      validators={['required']}\n                      errorMessages={['Este campo é obrigatório']}\n                  />\n                  <br />\n                  <TextValidator\n                      className={classes.textValidator}\n                      label=\"Mensagem\"\n                      onChange={this.handleChange}\n                      name=\"body\"\n                      value={formData.body}\n                      validators={['required']}\n                      errorMessages={['Este campo é obrigatório']}\n                  />\n                  <br />\n                  <TextValidator\n                      className={classes.textValidator}\n                      label=\"Autor\"\n                      onChange={this.handleChange}\n                      name=\"author\"\n                      value={formData.author}\n                      validators={['required']}\n                      errorMessages={['Este campo é obrigatório']}\n                  />\n                  <br />\n                  <SelectValidator\n                      className={classes.selectValidator}\n                      id=\"category\"\n                      onChange={this.handleChange}\n                      name=\"category\"\n                      value={formData.category}\n                      SelectProps={{\n                      native: true\n                      }}\n                      validators={['required']}\n                      errorMessages={['Este campo é obrigatório']}\n                  >\n                  <option value=\"\">Selecione uma opção</option>\n                    { this.getOptions() }\n                  </SelectValidator>\n                  <br />\n\n                  <div className={classes.buttonContainer}>\n                    <Button\n                        className={classes.button}\n                        raised=\"true\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={submitted}\n                    >\n                        {\n                            (submitted && 'Post enviado com sucesso!')\n                            || (!submitted && 'Enviar')\n                        }\n                    </Button>\n\n                    <Button\n                        component={GoToMain}\n                        className={classes.button}\n                        raised=\"true\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled={submitted}\n                    >\n                      Cancelar\n                    </Button>\n                  </div>\n              </ValidatorForm>\n            </div>\n            </Paper>\n          </Grid>\n        </div>\n      </MuiThemeProvider>  \n    )\n  }\n}\n\nNewPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return { categories: state.categories }\n}\n\nconst styles = theme => ({\n  root: {\n    marginTop: 75,\n    flexGrow: 1,\n  },\n  margin: {\n   margin: theme.spacing.unit,\n  },\n  paper: {\n    padding: theme.spacing.unit,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  heading: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  },\n  textValidator: {\n    width: 500\n  },\n  selectValidator: {\n    width: 500,\n    marginTop: 20\n  },\n  buttonContainer: {\n    margin: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 0,\n    marginTop: 50\n  },\n  button: {\n    width: 150,\n    margin: 5\n  },\n});\n\nexport default withStyles(styles)(connect(mapStateToProps, {createPost, fetchCategories})(NewPost));\n"]},"metadata":{},"sourceType":"module"}