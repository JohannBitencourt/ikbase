{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/Comment.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt';\nimport Badge from '@material-ui/core/Badge';\nimport Star from '@material-ui/icons/Star';\nimport { currentDate } from '../helpers/currentDate';\nimport { getFisrtChar } from '../helpers/strings';\nvar SHOW_COMMENT = 'SHOW_COMMENT';\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comment, _Component);\n\n  function Comment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      scene: SHOW_COMMENT\n    };\n\n    _this.toggleScene = function (scene) {\n      _this.setState({\n        scene: scene\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"renderComment\",\n    value: function renderComment() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          comment = _this$props.comment,\n          voteForComment = _this$props.voteForComment,\n          onDeleted = _this$props.onDeleted;\n\n      if (this.state.scene === SHOW_COMMENT) {\n        return React.createElement(ListItem, {\n          alignItems: \"flex-start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          className: classes.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, getFisrtChar(comment.author))), React.createElement(ListItemText, {\n          primary: comment.author,\n          secondary: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, React.createElement(Typography, {\n            component: \"span\",\n            className: classes.inline,\n            color: \"textPrimary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, currentDate(comment.timestamp)), \" \\u2014 \".concat(comment.body)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(CardActions, {\n          className: classes.actions,\n          disableActionSpacing: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Vote Score\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          badgeContent: comment.voteScore ? comment.voteScore : 0,\n          color: \"primary\",\n          classes: {\n            badge: classes.badge\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Star, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }))), React.createElement(IconButton, {\n          \"aria-label\": \"Up Vote\",\n          onClick: function onClick() {\n            return voteForComment(comment.id, 'upVote');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(ThumbUpAlt, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })), React.createElement(IconButton, {\n          \"aria-label\": \"Down Vote\",\n          onClick: function onClick() {\n            return voteForComment(comment.id, 'downVote');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(ThumbDownAlt, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })), React.createElement(IconButton, {\n          \"aria-label\": \"Delete Comment\",\n          onClick: function onClick() {\n            return onDeleted(comment.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(DeleteIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        })))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderComment();\n    }\n  }]);\n\n  return Comment;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    avatar: {\n      margin: 10,\n      color: 'white',\n      backgroundColor: '#673ab7'\n    }\n  };\n};\n\nComment.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Comment);","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/Comment.js"],"names":["React","Component","PropTypes","withStyles","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","CardActions","IconButton","Grid","DeleteIcon","ThumbUpAlt","ThumbDownAlt","Badge","Star","currentDate","getFisrtChar","SHOW_COMMENT","Comment","state","scene","toggleScene","setState","props","classes","comment","voteForComment","onDeleted","avatar","author","inline","timestamp","body","actions","voteScore","badge","id","renderComment","styles","theme","margin","color","backgroundColor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport CardActions from '@material-ui/core/CardActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport Grid from '@material-ui/core/Grid'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt'\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt'\nimport Badge from '@material-ui/core/Badge'\nimport Star from '@material-ui/icons/Star'\n\nimport { currentDate } from '../helpers/currentDate'\nimport { getFisrtChar } from '../helpers/strings'\n\nconst SHOW_COMMENT = 'SHOW_COMMENT'\n\nclass Comment extends Component {\n  state = {\n    scene: SHOW_COMMENT\n  }\n\n  toggleScene = (scene) => {\n    this.setState({\n      scene: scene\n    });\n  }\n\n  renderComment() {\n    const { classes, comment, voteForComment, onDeleted } = this.props;\n\n    if (this.state.scene === SHOW_COMMENT) {\n      return (\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>{getFisrtChar(comment.author)}</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={comment.author}\n            secondary={\n              <React.Fragment>\n                <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                  {currentDate(comment.timestamp)}\n                </Typography>\n                {` — ${comment.body}`}\n              </React.Fragment>\n            }\n          />\n          <CardActions className={classes.actions} disableActionSpacing>\n\n            <IconButton aria-label=\"Vote Score\">\n              <Badge badgeContent={comment.voteScore ? comment.voteScore : 0} color=\"primary\" classes={{ badge: classes.badge }}>\n                <Star />\n              </Badge>\n            </IconButton>\n\n            <IconButton aria-label=\"Up Vote\" onClick={() => voteForComment(comment.id, 'upVote')}>\n              <ThumbUpAlt />\n            </IconButton>\n\n            <IconButton aria-label=\"Down Vote\" onClick={() => voteForComment(comment.id, 'downVote')}>\n              <ThumbDownAlt />\n            </IconButton>\n\n            <IconButton aria-label=\"Delete Comment\" onClick={() => onDeleted(comment.id)}>\n              <Grid item xs={8}>\n                <DeleteIcon />\n              </Grid>\n            </IconButton>\n\n          </CardActions>\n        </ListItem>\n      );\n    }\n  }\n\n  render() {\n    return (\n      this.renderComment()\n    );\n  }\n}\n\nconst styles = theme => ({\n  avatar: {\n    margin: 10,\n    color: 'white',\n    backgroundColor: '#673ab7',\n  },\n});\n\nComment.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Comment);\n"]},"metadata":{},"sourceType":"module"}