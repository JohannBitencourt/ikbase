{"ast":null,"code":"import _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/Post.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Comment from '@material-ui/icons/Comment';\nimport Star from '@material-ui/icons/Star';\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt';\nimport Badge from '@material-ui/core/Badge';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { currentDate } from '../helpers/currentDate';\nimport { capitalize } from '../helpers/capitalize';\nimport { styledColors } from '../helpers/styled';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      _commentCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var post = this.props.post;\n      this.props.fetchCommentsCount(post.id, function (data) {\n        _this2.setState({\n          _commentCount: data.amount\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          post = _this$props.post,\n          onDeletePost = _this$props.onDeletePost,\n          commentCount = _this$props.commentCount,\n          voteForPost = _this$props.voteForPost,\n          id = _this$props.match.params.id;\n      return React.createElement(MuiThemeProvider, {\n        theme: styledColors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        title: id ? \"\".concat(post.title) : React.createElement(Link, {\n          to: \"\".concat(post.category, \"/\").concat(post.id),\n          style: {\n            textDecoration: 'none',\n            color: '#000'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, post.title),\n        subheader: \"Postado por \".concat(post.author, \" - \").concat(currentDate(post.timestamp)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), post.body.length > 0 && React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"( \".concat(capitalize(post.category), \" )\")), \" \", post.body)), React.createElement(CardActions, {\n        className: classes.actions,\n        disableActionSpacing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        \"aria-label\": \"Vote Score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        badgeContent: post.voteScore,\n        color: \"secondary\",\n        classes: {\n          badge: classes.badge\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Star, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(IconButton, {\n        component: Link,\n        to: \"/\".concat(post.category, \"/\").concat(post.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        badgeContent: commentCount ? commentCount : this.state._commentCount,\n        color: \"secondary\",\n        classes: {\n          badge: classes.badge\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Comment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(IconButton, {\n        onClick: function onClick() {\n          return voteForPost(post.id, 'upVote');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ThumbUpAlt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: function onClick() {\n          return voteForPost(post.id, 'downVote');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ThumbDownAlt, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        className: classes.actionsRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: function onClick() {\n          return onDeletePost(post.id, function () {\n            _this3.props.history.push('/');\n          });\n        },\n        style: {\n          backgroundColor: 'transparent'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      maxWidth: '100%',\n      backgroundColor: '#fffde6'\n    },\n    actions: {\n      display: 'flex'\n    },\n    actionsRight: {\n      marginLeft: 'auto'\n    },\n    icon: {\n      margin: theme.spacing.unit,\n      fontSize: 25\n    }\n  };\n};\n\nPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired\n};\nexport default withRouter(withStyles(styles)(Post));","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/Post.js"],"names":["React","PropTypes","Link","withRouter","Card","CardHeader","CardContent","CardActions","IconButton","Typography","Comment","Star","ThumbUpAlt","ThumbDownAlt","Badge","Grid","DeleteIcon","currentDate","capitalize","styledColors","withStyles","MuiThemeProvider","Post","state","_commentCount","post","props","fetchCommentsCount","id","data","setState","amount","classes","onDeletePost","commentCount","voteForPost","match","params","card","title","category","textDecoration","color","author","timestamp","body","length","actions","voteScore","badge","actionsRight","history","push","backgroundColor","icon","Component","styles","theme","maxWidth","display","marginLeft","margin","spacing","unit","fontSize","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SACEC,UADF,EAEEC,gBAFF,QAGQ,0BAHR;;IAKMC,I;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AAAEC,MAAAA,aAAa,EAAE;AAAjB,K;;;;;;yCAEa;AAAA;;AAAA,UACXC,IADW,GACF,KAAKC,KADH,CACXD,IADW;AAEnB,WAAKC,KAAL,CAAWC,kBAAX,CAA8BF,IAAI,CAACG,EAAnC,EAAuC,UAACC,IAAD,EAAU;AAAE,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,aAAa,EAAEK,IAAI,CAACE;AAAtB,SAAd;AAAgD,OAAnG;AACD;;;6BAEQ;AAAA;;AAAA,wBAEyB,KAAKL,KAF9B;AAAA,UACCM,OADD,eACCA,OADD;AAAA,UACUP,IADV,eACUA,IADV;AAAA,UACgBQ,YADhB,eACgBA,YADhB;AAAA,UAC8BC,YAD9B,eAC8BA,YAD9B;AAAA,UAC4CC,WAD5C,eAC4CA,WAD5C;AAAA,UAEcP,EAFd,eAELQ,KAFK,CAEIC,MAFJ,CAEcT,EAFd;AAIP,aACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAET,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEa,OAAO,CAACM,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEV,EAAE,aAAMH,IAAI,CAACc,KAAX,IAAqB,oBAAC,IAAD;AAAM,UAAA,EAAE,YAAKd,IAAI,CAACe,QAAV,cAAsBf,IAAI,CAACG,EAA3B,CAAR;AAAyC,UAAA,KAAK,EAAE;AAAEa,YAAAA,cAAc,EAAE,MAAlB;AAA0BC,YAAAA,KAAK,EAAE;AAAjC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4FjB,IAAI,CAACc,KAAjG,CADhC;AAEE,QAAA,SAAS,wBAAiBd,IAAI,CAACkB,MAAtB,gBAAkC1B,WAAW,CAACQ,IAAI,CAACmB,SAAN,CAA7C,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMInB,IAAI,CAACoB,IAAL,CAAUC,MAAV,GAAmB,CAAnB,IACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAS5B,UAAU,CAACO,IAAI,CAACe,QAAN,CAAnB,QADF,OAC+Cf,IAAI,CAACoB,IADpD,CADF,CAPJ,EAcE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAEb,OAAO,CAACe,OAAhC;AAAyC,QAAA,oBAAoB,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,sBAAW,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAEtB,IAAI,CAACuB,SAA1B;AAAqC,QAAA,KAAK,EAAC,WAA3C;AAAuD,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEjB,OAAO,CAACiB;AAAjB,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAOE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAE/C,IADb;AACmB,QAAA,EAAE,aAAMuB,IAAI,CAACe,QAAX,cAAuBf,IAAI,CAACG,EAA5B,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAAO,QAAA,YAAY,EAAEM,YAAY,GAAGA,YAAH,GAAkB,KAAKX,KAAL,CAAWC,aAA9D;AAA6E,QAAA,KAAK,EAAC,WAAnF;AAA+F,QAAA,OAAO,EAAE;AAAEyB,UAAAA,KAAK,EAAEjB,OAAO,CAACiB;AAAjB,SAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAPF,EAcE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAMd,WAAW,CAACV,IAAI,CAACG,EAAN,EAAU,QAAV,CAAjB;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,EAkBE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAMO,WAAW,CAACV,IAAI,CAACG,EAAN,EAAU,UAAV,CAAjB;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAlBF,EAsBE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEI,OAAO,CAACkB,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBACPjB,YAAY,CAACR,IAAI,CAACG,EAAN,EAAU,YAAM;AAAE,YAAA,MAAI,CAACF,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAA8B,WAAhD,CADL;AAAA,SADX;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAErB,OAAO,CAACsB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALJ,CADF,CAtBF,CAdF,CADF,CADF;AAqDD;;;;EAlEgBtD,KAAK,CAACuD,S;;AAqEzB,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBnB,IAAAA,IAAI,EAAE;AACJoB,MAAAA,QAAQ,EAAE,MADN;AAEJL,MAAAA,eAAe,EAAE;AAFb,KADiB;AAKvBN,IAAAA,OAAO,EAAE;AACPY,MAAAA,OAAO,EAAE;AADF,KALc;AAQvBT,IAAAA,YAAY,EAAE;AACZU,MAAAA,UAAU,EAAE;AADA,KARS;AAWvBN,IAAAA,IAAI,EAAE;AACJO,MAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IADlB;AAEJC,MAAAA,QAAQ,EAAE;AAFN;AAXiB,GAAL;AAAA,CAApB;;AAiBA1C,IAAI,CAAC2C,SAAL,GAAiB;AACfjC,EAAAA,OAAO,EAAE/B,SAAS,CAACiE,MAAV,CAAiBC,UADX;AAEf1C,EAAAA,IAAI,EAAExB,SAAS,CAACiE,MAAV,CAAiBC;AAFR,CAAjB;AAKA,eAAehE,UAAU,CAACiB,UAAU,CAACoC,MAAD,CAAV,CAAmBlC,IAAnB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, withRouter } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Comment from '@material-ui/icons/Comment'\nimport Star from '@material-ui/icons/Star'\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt'\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt'\nimport Badge from '@material-ui/core/Badge'\nimport Grid from '@material-ui/core/Grid'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { currentDate } from '../helpers/currentDate'\nimport { capitalize } from '../helpers/capitalize'\nimport { styledColors } from '../helpers/styled'\nimport { \n  withStyles, \n  MuiThemeProvider, \n } from '@material-ui/core/styles'\n\nclass Post extends React.Component {\n\n  state = { _commentCount: 0 }\n\n  componentWillMount() {\n    const { post } = this.props;\n    this.props.fetchCommentsCount(post.id, (data) => { this.setState({ _commentCount: data.amount }); });\n  }\n\n  render() {\n    const { classes, post, onDeletePost, commentCount, voteForPost,\n      match: { params: { id } } } = this.props;\n      \n    return (\n      <MuiThemeProvider theme={styledColors}>\n        <Card className={classes.card}>\n          <CardHeader\n            title={id ? `${post.title}` : <Link to={`${post.category}/${post.id}`} style={{ textDecoration: 'none', color: '#000' }}>{post.title}</Link>}\n            subheader={`Postado por ${post.author} - ${currentDate(post.timestamp)}`}\n          />\n\n          { post.body.length > 0 &&(\n            <CardContent>\n              <Typography component=\"p\">\n                <b>{`( ${capitalize(post.category)} )`}</b> {post.body}\n              </Typography>\n            </CardContent>\n          )}\n\n          <CardActions className={classes.actions} disableActionSpacing>\n            <IconButton aria-label=\"Vote Score\">\n              <Badge badgeContent={post.voteScore} color=\"secondary\" classes={{ badge: classes.badge }}>\n                <Star />\n              </Badge>\n            </IconButton>\n\n            <IconButton\n              component={Link} to={`/${post.category}/${post.id}`}>\n              <Badge badgeContent={commentCount ? commentCount : this.state._commentCount} color=\"secondary\" classes={{ badge: classes.badge }}>\n                <Comment />\n              </Badge>\n            </IconButton>\n\n            <IconButton onClick={() => voteForPost(post.id, 'upVote') }>\n              <ThumbUpAlt />\n            </IconButton>\n\n            <IconButton onClick={() => voteForPost(post.id, 'downVote')}>\n              <ThumbDownAlt />\n            </IconButton>\n\n            <Grid className={classes.actionsRight}>\n              <IconButton\n                onClick={() =>\n                  onDeletePost(post.id, () => { this.props.history.push('/') } )}\n                style={{ backgroundColor: 'transparent' }}\n              >\n                  <Grid item xs={8}>\n                    <DeleteIcon className={classes.icon} />\n                  </Grid>\n              </IconButton>\n            </Grid>\n          </CardActions>\n        </Card>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n    backgroundColor: '#fffde6'\n  },\n  actions: {\n    display: 'flex',\n  },\n  actionsRight: {\n    marginLeft: 'auto',\n  },\n  icon: {\n    margin: theme.spacing.unit,\n    fontSize: 25,\n  },\n});\n\nPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(Post));\n"]},"metadata":{},"sourceType":"module"}