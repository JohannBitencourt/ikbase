{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nimport { BASE_URL, guid } from '../resources/constants';\nimport { FETCH_COMMENTS_COUNT, FETCH_COMMENTS, COMMENT_WAS_CREATED, COMMENT_WAS_DELETED, VOTE_FOR_COMMENT } from './types';\naxios.defaults.headers.common['Authorization'] = {\n  'Authorization': 'whatever-you-want',\n  'Accept': 'application/json'\n};\nexport function fetchCommentsCount(id, callback) {\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"/posts/\").concat(id, \"/comments\")).then(function (res) {\n      // fetch all comments that are not deleted\n      var comments = _.filter(res.data, function (comment) {\n        return !comment.deleted;\n      });\n\n      var amount = Object.keys(comments).length;\n      var data = {\n        id: id,\n        amount: amount\n      };\n      callback(data);\n      dispatch({\n        type: FETCH_COMMENTS_COUNT,\n        payload: data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function fetchComments(postId) {\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"/posts/\").concat(postId, \"/comments\")).then(function (res) {\n      dispatch({\n        type: FETCH_COMMENTS,\n        payload: res.data\n      });\n    });\n  };\n}\nexport function createComment(body, author, parentId, callback) {\n  var data = {\n    id: guid(),\n    parentId: parentId,\n    timestamp: Date.now(),\n    body: body,\n    author: author\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(BASE_URL, \"/comments\"), data).then(function (res) {\n      callback();\n      dispatch({\n        type: COMMENT_WAS_CREATED,\n        payload: res.data\n      });\n    });\n  };\n}\nexport function deleteComment(id, callback) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(BASE_URL, \"/comments/\").concat(id)).then(function (res) {\n      callback();\n      dispatch({\n        type: COMMENT_WAS_DELETED,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function voteForComment(id, vote) {\n  return function (dispatch) {\n    axios.post(\"\".concat(BASE_URL, \"/comments/\").concat(id), {\n      option: vote\n    }).then(function (res) {\n      return dispatch({\n        type: VOTE_FOR_COMMENT,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/actions/comments.js"],"names":["axios","_","BASE_URL","guid","FETCH_COMMENTS_COUNT","FETCH_COMMENTS","COMMENT_WAS_CREATED","COMMENT_WAS_DELETED","VOTE_FOR_COMMENT","defaults","headers","common","fetchCommentsCount","id","callback","dispatch","get","then","res","comments","filter","data","comment","deleted","amount","Object","keys","length","type","payload","catch","error","console","log","fetchComments","postId","createComment","body","author","parentId","timestamp","Date","now","post","deleteComment","delete","voteForComment","vote","option"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport _ from 'lodash'\nimport { BASE_URL, guid } from '../resources/constants'\nimport {\n  FETCH_COMMENTS_COUNT,\n  FETCH_COMMENTS,\n  COMMENT_WAS_CREATED,\n  COMMENT_WAS_DELETED,\n  VOTE_FOR_COMMENT,\n} from './types'\n\naxios.defaults.headers.common['Authorization'] = { 'Authorization': 'whatever-you-want', 'Accept': 'application/json', };\n\nexport function fetchCommentsCount(id, callback) {\n  return dispatch => {\n    axios.get(`${BASE_URL}/posts/${id}/comments`)\n    .then(res => {\n      // fetch all comments that are not deleted\n      const comments = _.filter(res.data, comment => !comment.deleted);\n      const amount = Object.keys(comments).length;\n      const data = { id, amount }\n      callback(data);\n      dispatch({\n        type: FETCH_COMMENTS_COUNT,\n        payload: data\n      });\n    }).catch(error => console.log(error));\n  }\n}\n\nexport function fetchComments(postId) {\n  return dispatch => {\n    axios.get(`${BASE_URL}/posts/${postId}/comments`)\n    .then(res => {\n      dispatch({\n        type: FETCH_COMMENTS,\n        payload: res.data\n      });\n    })\n  }\n}\n\nexport function createComment(body, author, parentId, callback) {\n  const data = {\n    id: guid(),\n    parentId,\n    timestamp: Date.now(),\n    body,\n    author\n  }\n\n  return dispatch => {\n    axios.post(`${BASE_URL}/comments`, data)\n    .then(res => {\n      callback();\n      dispatch({\n        type: COMMENT_WAS_CREATED,\n        payload: res.data\n      });\n    });\n  }\n}\n\nexport function deleteComment(id, callback) {\n  return dispatch => {\n    axios.delete(`${BASE_URL}/comments/${id}`)\n    .then(res => {\n      callback();\n      dispatch({\n        type: COMMENT_WAS_DELETED,\n        payload: res.data\n      });\n    }).catch(error => console.log(error));\n  }\n}\n\nexport function voteForComment(id, vote) {\n  return dispatch => {\n    axios.post(`${BASE_URL}/comments/${id}`, { option: vote })\n    .then(res => dispatch({ type: VOTE_FOR_COMMENT, payload: res.data }))\n    .catch(error => console.log(error));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}