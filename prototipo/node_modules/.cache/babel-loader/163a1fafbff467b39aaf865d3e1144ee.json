{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, guid } from '../resources/constants';\nimport { FETCH_POSTS, FETCH_POST_ID, POST_WAS_CREATED, POST_SORT_ORDER, POST_WAS_DELETED, POST_WAS_VOTED } from './types';\naxios.defaults.headers.common['Authorization'] = {\n  'Authorization': 'whatever-you-want',\n  'Accept': 'application/json'\n};\nexport function fetchPosts() {\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"/posts\")).then(function (res) {\n      return dispatch(fetchPostsSuccess(res.data));\n    });\n  };\n}\nexport function fetchPost(id, callback) {\n  return function (dispatch) {\n    axios.get(\"\".concat(BASE_URL, \"/posts/\").concat(id)).then(function (res) {\n      dispatch(fetchPostSuccess(res.data));\n      setTimeout(function () {\n        callback();\n      }, 100);\n    });\n  };\n}\nexport function createPost(values, callback) {\n  var title = values.title,\n      body = values.body,\n      author = values.author,\n      category = values.category;\n  var data = {\n    id: guid(),\n    timestamp: Date.now(),\n    title: title,\n    body: body,\n    author: author,\n    category: category\n  };\n  return function (dispatch) {\n    axios.post(\"\".concat(BASE_URL, \"/posts\"), data).then(function (res) {\n      callback();\n      dispatch(createPostSuccess(res.data));\n    });\n  };\n}\nexport function deletePost(id, callback) {\n  return function (dispatch) {\n    axios.delete(\"\".concat(BASE_URL, \"/posts/\").concat(id)).then(function (res) {\n      callback();\n      dispatch(deletePostSuccess(id));\n    });\n  };\n}\nexport function voteForPost(id, vote) {\n  return function (dispatch) {\n    axios.post(\"\".concat(BASE_URL, \"/posts/\").concat(id), {\n      option: vote\n    }).then(function (res) {\n      return dispatch(votedPostSuccess(res.data));\n    });\n  };\n}\n\nfunction fetchPostsSuccess(data) {\n  return {\n    type: FETCH_POSTS,\n    payload: data\n  };\n}\n\nfunction fetchPostSuccess(data) {\n  return {\n    type: FETCH_POST_ID,\n    payload: data\n  };\n}\n\nfunction createPostSuccess(data) {\n  return {\n    type: POST_WAS_CREATED,\n    payload: data\n  };\n}\n\nexport function postSortOrder(sortType) {\n  return {\n    type: POST_SORT_ORDER,\n    payload: sortType\n  };\n}\n\nfunction deletePostSuccess(data) {\n  return {\n    type: POST_WAS_DELETED,\n    payload: data\n  };\n}\n\nfunction votedPostSuccess(data) {\n  return {\n    type: POST_WAS_VOTED,\n    payload: data\n  };\n}","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/actions/post.js"],"names":["axios","BASE_URL","guid","FETCH_POSTS","FETCH_POST_ID","POST_WAS_CREATED","POST_SORT_ORDER","POST_WAS_DELETED","POST_WAS_VOTED","defaults","headers","common","fetchPosts","dispatch","get","then","res","fetchPostsSuccess","data","fetchPost","id","callback","fetchPostSuccess","setTimeout","createPost","values","title","body","author","category","timestamp","Date","now","post","createPostSuccess","deletePost","delete","deletePostSuccess","voteForPost","vote","option","votedPostSuccess","type","payload","postSortOrder","sortType"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { BASE_URL, guid } from '../resources/constants'\nimport {\n  FETCH_POSTS,\n  FETCH_POST_ID,\n  POST_WAS_CREATED,\n  POST_SORT_ORDER,\n  POST_WAS_DELETED,\n  POST_WAS_VOTED,\n} from './types'\n\n\naxios.defaults.headers.common['Authorization'] = { 'Authorization': 'whatever-you-want', 'Accept': 'application/json', };\n\nexport function fetchPosts() {\n  return dispatch => {\n    axios.get(`${BASE_URL}/posts`)\n    .then(res => dispatch(fetchPostsSuccess(res.data)));\n  }\n}\n\nexport function fetchPost(id, callback) {\n  return dispatch => {\n    axios.get(`${BASE_URL}/posts/${id}`)\n    .then(res => {\n      dispatch(fetchPostSuccess(res.data))\n      setTimeout(function(){ callback() }, 100);\n    })\n  }\n}\n\nexport function createPost(values, callback) {\n  const { title, body, author, category } = values;\n\n  const data = {\n    id: guid(),\n    timestamp: Date.now(),\n    title,\n    body,\n    author,\n    category\n  }\n\n  return dispatch => {\n    axios.post(`${BASE_URL}/posts`, data)\n    .then(res => {\n      callback();\n      dispatch(createPostSuccess(res.data));\n    });\n\n  }\n}\n\nexport function deletePost(id, callback) {\n  return dispatch => {\n    axios.delete(`${BASE_URL}/posts/${id}`)\n    .then(res => {\n      callback()\n      dispatch(deletePostSuccess(id));\n    });\n  }\n}\n\nexport function voteForPost(id, vote) {\n  return dispatch => {\n    axios.post(`${BASE_URL}/posts/${id}`, { option: vote })\n    .then(res => dispatch(votedPostSuccess(res.data)))\n  }\n}\n\nfunction fetchPostsSuccess(data) {\n  return {\n    type: FETCH_POSTS,\n    payload: data\n  };\n}\n\n\nfunction fetchPostSuccess(data) {\n  return {\n    type: FETCH_POST_ID,\n    payload: data\n  };\n}\n\nfunction createPostSuccess(data) {\n  return {\n    type: POST_WAS_CREATED,\n    payload: data\n  };\n}\n\nexport function postSortOrder(sortType) {\n  return {\n    type: POST_SORT_ORDER,\n    payload: sortType\n  }\n}\n\nfunction deletePostSuccess(data) {\n  return {\n    type: POST_WAS_DELETED,\n    payload: data\n  }\n}\n\nfunction votedPostSuccess(data) {\n  return {\n    type: POST_WAS_VOTED,\n    payload: data\n  }\n}\n"]},"metadata":{},"sourceType":"module"}