{"ast":null,"code":"import _objectSpread from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/ikbase/prototipo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspace/ikbase/prototipo/src/components/NavbarHeader.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CategoriesContainner from '../containers/Categories';\nimport { Link } from 'react-router-dom';\nimport { styled } from '../helpers/styled';\nimport { withStyles, MuiThemeProvider } from '@material-ui/core/styles';\nvar drawerWidth = 240;\n\nvar NavbarHeader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavbarHeader, _Component);\n\n  function NavbarHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NavbarHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavbarHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleDrawerOpen = function () {\n      _this.setState({\n        open: true\n      });\n\n      _this.props.onChangeDrawer(true);\n    };\n\n    _this.handleDrawerClose = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.props.onChangeDrawer(false);\n    };\n\n    return _this;\n  }\n\n  _createClass(NavbarHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: styled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar, _defineProperty({}, classes.appBarShift, open)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        disableGutters: !open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        onClick: this.handleDrawerOpen,\n        className: classNames(classes.menuButton, open && classes.hide),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MenuIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/\",\n        style: {\n          paddingLeft: 10,\n          textDecoration: 'none',\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"black\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"iKbase\")))), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.handleDrawerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, theme.direction === 'ltr' ? React.createElement(ChevronLeftIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }) : React.createElement(ChevronRightIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(CategoriesContainner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return NavbarHeader;\n}(Component);\n\nNavbarHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px'\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    }),\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20\n    },\n    hide: {\n      display: 'none'\n    }\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NavbarHeader);","map":{"version":3,"sources":["/workspace/ikbase/prototipo/src/components/NavbarHeader.js"],"names":["React","Component","PropTypes","classNames","Drawer","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","CssBaseline","AppBar","Toolbar","Typography","MenuIcon","CategoriesContainner","Link","styled","withStyles","MuiThemeProvider","drawerWidth","NavbarHeader","state","open","handleDrawerOpen","setState","props","onChangeDrawer","handleDrawerClose","classes","theme","appBar","appBarShift","menuButton","hide","paddingLeft","textDecoration","color","drawer","paper","drawerPaper","drawerHeader","direction","propTypes","object","isRequired","styles","root","display","width","flexShrink","alignItems","padding","mixins","toolbar","justifyContent","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Drawer from '@material-ui/core/Drawer'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CategoriesContainner from '../containers/Categories'\nimport { Link } from 'react-router-dom'\nimport { styled } from '../helpers/styled'\nimport { \n  withStyles, \n  MuiThemeProvider, \n } from '@material-ui/core/styles'\n\nconst drawerWidth = 240;\n\nclass NavbarHeader extends Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n    this.props.onChangeDrawer(true)\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n    this.props.onChangeDrawer(false)\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div>\n        <MuiThemeProvider theme={styled}>\n        <CssBaseline />\n          <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          >\n          <Toolbar disableGutters={!open}>\n              <IconButton\n                color=\"inherit\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(classes.menuButton, open && classes.hide)}\n              >\n              <MenuIcon />\n            </IconButton>\n\n            <Link to=\"/\" style={{ paddingLeft: 10, textDecoration: 'none', color: '#fff' }}>\n              <Typography variant=\"h6\" color=\"black\" noWrap>\n                iKbase\n              </Typography>\n            </Link>\n          </Toolbar>\n          </AppBar>\n\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={this.handleDrawerClose}>\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n              </IconButton>\n            </div>\n          <Divider />\n            <CategoriesContainner />\n          <Divider />\n        </Drawer>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nNavbarHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n});\n\nexport default withStyles(styles, { withTheme: true })(NavbarHeader);\n"]},"metadata":{},"sourceType":"module"}